/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package sso3;

import org.springframework.security.core.Authentication;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.security.oauth2.core.OAuth2AccessToken;
import org.springframework.security.oauth2.core.oidc.user.OidcUser;
import org.springframework.security.oauth2.core.user.OAuth2User;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
//@RestController
@Controller
public class Library {

////////db user
////////add default landing pages
////////add dynamic landing pages	according to role
//csrf token
////////session mgmt
////////considering user roles
//differentiating between existing and new user and takes measures accordingly
//check claim profiles link
//check code enhancement and cleaning(latest spring boot, methods, etc)
//consent for Vidya
//new mailId for vidya
//understanding httpseccongifure
	
	
@GetMapping("/")
@ResponseBody
public String greet() {
	return "Hello";
}


@GetMapping("/ROLE_USER/authorised")
public String authorised(@AuthenticationPrincipal OAuth2User user, Model model) {
	///System.out.println(user.toString().replaceAll(", ", ", \n"));
	//Authentication authentication = SecurityContextHolder.getContext().getAuthentication();
	model.addAttribute("str", "USER: u have been authorised\n\n"+user.toString().replaceAll(", ", ", <br>"));
	return "authorised";
}
	
@GetMapping("/ROLE_ADMIN/bAuthorised2")
public String bAuthorised2(@AuthenticationPrincipal OAuth2User user, Model model) {
	///System.out.println(user.toString().replaceAll(", ", ", \n"));
		//Authentication authentication = SecurityContextHolder.getContext().getAuthentication();
		model.addAttribute("str", "ADMIN: u have been bAuthorised2\n\n"+user.toString().replaceAll(", ", ", <br>"));
		return "authorised";
}


/*@GetMapping("/logout")
public String logout(@AuthenticationPrincipal OidcUser user, Model model) {
	///System.out.println(user.toString().replaceAll(", ", ", \n"));
		//Authentication authentication = SecurityContextHolder.getContext().getAuthentication();
		model.addAttribute("str", "ADMIN: u have been bAuthorised2\n\n"+user.toString().replaceAll(", ", ", <br>"));
		return "logout";
}*/

}
